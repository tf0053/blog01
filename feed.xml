<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[tf0053/blog01]]></title><description><![CDATA[Scribbling working memo]]></description><link>https://tf0053.github.io/blog01/</link><generator>tf0053/blog01</generator><lastBuildDate>Thu, 22 Sep 2022 17:36:47 GMT</lastBuildDate><atom:link href="https://tf0053.github.io/blog01/feed.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[Curveカード]]></title><link>https://tf0053.github.io/blog01/articles/4</link><guid isPermaLink="true">https://tf0053.github.io/blog01/articles/4</guid><pubDate>Tue, 20 Sep 2022 14:57:11 GMT</pubDate><content:encoded><![CDATA[<p>昔はキャッシュバックで有名だったが、今は有料プラン出ないとポイントはつかない。</p>
<p>無料枠の価値は、通貨の変換を良いレートでやってくれる（らしい）ことだけ。例えばUSD建のNetflixを楽天カードで払う、時に、良いレートで（日本円で）楽天カードにかけてくれる</p>]]></content:encoded></item><item><title><![CDATA[Binanceカード]]></title><link>https://tf0053.github.io/blog01/articles/3</link><guid isPermaLink="true">https://tf0053.github.io/blog01/articles/3</guid><pubDate>Tue, 13 Sep 2022 08:49:36 GMT</pubDate><content:encoded><![CDATA[<p>BNB保持でcashbackのBNBが貯まる。</p>
<p>以下はバック前
<img src="https://user-images.githubusercontent.com/79441/189856684-12e12e3a-f818-4896-bf4b-270d7f4077e6.jpg" alt="Screenshot_20220913-104625_Binance"></p><hr><p>Cashbackという言い方で、BNBで入る（貯まる）</p>
<p>ただ、Walletの中のFunndingというタブの中に貯まることに注意。Sourceではない。</p><hr><p>これは、そもそもカードの支払いにはFundingが使われる、そこにバックアップ（Fundingに資金がなくなったら）としてSourceも使えるよ、ということ。</p>
<p>支払い通貨の優先指定、もあるが、これは各FundingやSource内での順位指定。つまり、EURを一番、BNBを二番、とした場合、Fundingの中でEUR、そこがゼロになったらBNB、の順に使われる、ので、つまり、こうなるとCashbackで溜まったBNBが使われる。
これに気が付かず、Cashbackほんとにされてんのか、と問い合わせしてしまった。</p><hr><p>あと、Cashbackは、Historyにでるトランザクションレコードとして確認できるが、</p>
<ul>
<li>ステータスがCompleteになったものについて</li>
<li>ステータス変化の24h後になってから付与される（それまではCashbakの欄は"--"のまま）</li>
</ul>
<p>であることに注意が必要。</p>
<p>以下、Historyページからレコード詳細を見たところ。FundingにあったBNBが使われている、ということがわかる。
<img src="https://user-images.githubusercontent.com/79441/189871961-708bc4fd-8fff-4700-b752-6903cb115e43.jpg" alt="Screenshot_20220913-104459_Binance"></p><hr><p>Cashbackは、保持しているBNBの量により決まる。この保持量は前日から振り返って過去29日分での平均になり、その評価に使われる保持量、はレベルタブの中で確認ができる。</p>
<p><img src="https://user-images.githubusercontent.com/79441/191813414-be94804f-f6fb-42f6-94a7-45405a3c46ec.jpg" alt="Screenshot_20220922-193009_Binance"></p>]]></content:encoded></item><item><title><![CDATA[gialog素晴らしい]]></title><link>https://tf0053.github.io/blog01/articles/2</link><guid isPermaLink="true">https://tf0053.github.io/blog01/articles/2</guid><pubDate>Mon, 12 Sep 2022 23:33:48 GMT</pubDate><content:encoded><![CDATA[<p>GithubのIssueを書くことは、調べもののブログを書くことととても似ている。</p>
<p>トピックがあり、それに対して新しい情報を得てどんどんアップデートしてゆく、という使い方に（その適度な表現力も含め）ピッタリ。</p><hr><p>他の人が書いたコメントは、記事本文的にではなく、まさにコメントっぽく出てほしい。</p><hr><p>ラベルも使えると素敵だが、それ用の静的ページを生成するようにしないといけないだろうから手間？</p><hr><p>システムの構造を理解したい</p>
<p>workflowの中でrubyで書かれた<a href="https://github.com/r7kamura/gialog-sync"><code>gialog-sync</code></a>が実行され、それによりissueがmdとしてファイル群に書き出される</p>
<p>そのファイル群をデータとして、Nextを使って静的サイト用のhtml等ファイル群を出力、それをgh-pagesとしてPublish、という流れか</p><hr><p>exportにて吐き出す処理はここ
<a href="https://github.com/tf0053/blog01/blob/main/.github/workflows/sync.yml#L50">https://github.com/tf0053/blog01/blob/main/.github/workflows/sync.yml#L50</a></p>
<p>Next自体がわかってなさ過ぎるが、便利そうではある</p>]]></content:encoded></item><item><title><![CDATA[test-A]]></title><link>https://tf0053.github.io/blog01/articles/1</link><guid isPermaLink="true">https://tf0053.github.io/blog01/articles/1</guid><pubDate>Mon, 12 Sep 2022 15:35:23 GMT</pubDate><content:encoded><![CDATA[<p>test description</p><hr><p>What is this?
Updated?</p><hr><p>What does it happen if another user post a comment?</p>]]></content:encoded></item></channel></rss>